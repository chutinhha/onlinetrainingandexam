//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3603
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3603 版自动生成。
// 
#pragma warning disable 1591

namespace OnLineExamBLLWS.DALWS_JudgeProblem {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DALWS_JudgeProblemSoap", Namespace="http://tempuri.org/")]
    public partial class DALWS_JudgeProblem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback judgeProblemUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback judgeProblemInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJudgeProblemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback selectJudgeQuestionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DALWS_JudgeProblem() {
            this.Url = global::OnLineExamBLLWS.Properties.Settings.Default.OnLineExamBLLWS_DALWS_JudgeProblem_DALWS_JudgeProblem;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event judgeProblemUpdateCompletedEventHandler judgeProblemUpdateCompleted;
        
        /// <remarks/>
        public event judgeProblemInsertCompletedEventHandler judgeProblemInsertCompleted;
        
        /// <remarks/>
        public event GetJudgeProblemListCompletedEventHandler GetJudgeProblemListCompleted;
        
        /// <remarks/>
        public event selectJudgeQuestionCompletedEventHandler selectJudgeQuestionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/judgeProblemUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool judgeProblemUpdate(JudgeProblem jp) {
            object[] results = this.Invoke("judgeProblemUpdate", new object[] {
                        jp});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void judgeProblemUpdateAsync(JudgeProblem jp) {
            this.judgeProblemUpdateAsync(jp, null);
        }
        
        /// <remarks/>
        public void judgeProblemUpdateAsync(JudgeProblem jp, object userState) {
            if ((this.judgeProblemUpdateOperationCompleted == null)) {
                this.judgeProblemUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjudgeProblemUpdateOperationCompleted);
            }
            this.InvokeAsync("judgeProblemUpdate", new object[] {
                        jp}, this.judgeProblemUpdateOperationCompleted, userState);
        }
        
        private void OnjudgeProblemUpdateOperationCompleted(object arg) {
            if ((this.judgeProblemUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.judgeProblemUpdateCompleted(this, new judgeProblemUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/judgeProblemInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool judgeProblemInsert(JudgeProblem ji) {
            object[] results = this.Invoke("judgeProblemInsert", new object[] {
                        ji});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void judgeProblemInsertAsync(JudgeProblem ji) {
            this.judgeProblemInsertAsync(ji, null);
        }
        
        /// <remarks/>
        public void judgeProblemInsertAsync(JudgeProblem ji, object userState) {
            if ((this.judgeProblemInsertOperationCompleted == null)) {
                this.judgeProblemInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnjudgeProblemInsertOperationCompleted);
            }
            this.InvokeAsync("judgeProblemInsert", new object[] {
                        ji}, this.judgeProblemInsertOperationCompleted, userState);
        }
        
        private void OnjudgeProblemInsertOperationCompleted(object arg) {
            if ((this.judgeProblemInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.judgeProblemInsertCompleted(this, new judgeProblemInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJudgeProblemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JudgeProblem[] GetJudgeProblemList(string selectvalues) {
            object[] results = this.Invoke("GetJudgeProblemList", new object[] {
                        selectvalues});
            return ((JudgeProblem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetJudgeProblemListAsync(string selectvalues) {
            this.GetJudgeProblemListAsync(selectvalues, null);
        }
        
        /// <remarks/>
        public void GetJudgeProblemListAsync(string selectvalues, object userState) {
            if ((this.GetJudgeProblemListOperationCompleted == null)) {
                this.GetJudgeProblemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJudgeProblemListOperationCompleted);
            }
            this.InvokeAsync("GetJudgeProblemList", new object[] {
                        selectvalues}, this.GetJudgeProblemListOperationCompleted, userState);
        }
        
        private void OnGetJudgeProblemListOperationCompleted(object arg) {
            if ((this.GetJudgeProblemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJudgeProblemListCompleted(this, new GetJudgeProblemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/selectJudgeQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JudgeProblem[] selectJudgeQuestion(string UserId, int PaperId) {
            object[] results = this.Invoke("selectJudgeQuestion", new object[] {
                        UserId,
                        PaperId});
            return ((JudgeProblem[])(results[0]));
        }
        
        /// <remarks/>
        public void selectJudgeQuestionAsync(string UserId, int PaperId) {
            this.selectJudgeQuestionAsync(UserId, PaperId, null);
        }
        
        /// <remarks/>
        public void selectJudgeQuestionAsync(string UserId, int PaperId, object userState) {
            if ((this.selectJudgeQuestionOperationCompleted == null)) {
                this.selectJudgeQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnselectJudgeQuestionOperationCompleted);
            }
            this.InvokeAsync("selectJudgeQuestion", new object[] {
                        UserId,
                        PaperId}, this.selectJudgeQuestionOperationCompleted, userState);
        }
        
        private void OnselectJudgeQuestionOperationCompleted(object arg) {
            if ((this.selectJudgeQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.selectJudgeQuestionCompleted(this, new selectJudgeQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class JudgeProblem {
        
        private int idField;
        
        private int courseIDField;
        
        private string titleField;
        
        private bool answerField;
        
        private string userAnswerField;
        
        private System.DateTime examTimeField;
        
        private int markField;
        
        private string paperNameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int CourseID {
            get {
                return this.courseIDField;
            }
            set {
                this.courseIDField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public bool Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        public string UserAnswer {
            get {
                return this.userAnswerField;
            }
            set {
                this.userAnswerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExamTime {
            get {
                return this.examTimeField;
            }
            set {
                this.examTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Mark {
            get {
                return this.markField;
            }
            set {
                this.markField = value;
            }
        }
        
        /// <remarks/>
        public string PaperName {
            get {
                return this.paperNameField;
            }
            set {
                this.paperNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void judgeProblemUpdateCompletedEventHandler(object sender, judgeProblemUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class judgeProblemUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal judgeProblemUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void judgeProblemInsertCompletedEventHandler(object sender, judgeProblemInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class judgeProblemInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal judgeProblemInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetJudgeProblemListCompletedEventHandler(object sender, GetJudgeProblemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJudgeProblemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJudgeProblemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JudgeProblem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JudgeProblem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void selectJudgeQuestionCompletedEventHandler(object sender, selectJudgeQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class selectJudgeQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal selectJudgeQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JudgeProblem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JudgeProblem[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591