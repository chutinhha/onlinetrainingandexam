//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3603
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3603 版自动生成。
// 
#pragma warning disable 1591

namespace OnLineExamBLLWS.DALWS_Paper {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DALWS_PaperSoap", Namespace="http://tempuri.org/")]
    public partial class DALWS_Paper : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPaperTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePaperStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePaperState1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePaperDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAllPaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperSingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperSingMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperMultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperMultMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperJudgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperJudgMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperFillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperFillMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperQuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPaperQuesMarkOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPaperOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DALWS_Paper() {
            this.Url = global::OnLineExamBLLWS.Properties.Settings.Default.OnLineExamBLLWS_DALWS_Paper_DALWS_Paper;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPaperTypeCompletedEventHandler GetPaperTypeCompleted;
        
        /// <remarks/>
        public event UpdatePaperStateCompletedEventHandler UpdatePaperStateCompleted;
        
        /// <remarks/>
        public event UpdatePaperState1CompletedEventHandler UpdatePaperState1Completed;
        
        /// <remarks/>
        public event DeletePaperCompletedEventHandler DeletePaperCompleted;
        
        /// <remarks/>
        public event DeletePaperDetailCompletedEventHandler DeletePaperDetailCompleted;
        
        /// <remarks/>
        public event QueryAllPaperCompletedEventHandler QueryAllPaperCompleted;
        
        /// <remarks/>
        public event GetAllPaperSingCompletedEventHandler GetAllPaperSingCompleted;
        
        /// <remarks/>
        public event GetAllPaperSingMarkCompletedEventHandler GetAllPaperSingMarkCompleted;
        
        /// <remarks/>
        public event GetAllPaperMultCompletedEventHandler GetAllPaperMultCompleted;
        
        /// <remarks/>
        public event GetAllPaperMultMarkCompletedEventHandler GetAllPaperMultMarkCompleted;
        
        /// <remarks/>
        public event GetAllPaperJudgCompletedEventHandler GetAllPaperJudgCompleted;
        
        /// <remarks/>
        public event GetAllPaperJudgMarkCompletedEventHandler GetAllPaperJudgMarkCompleted;
        
        /// <remarks/>
        public event GetAllPaperFillCompletedEventHandler GetAllPaperFillCompleted;
        
        /// <remarks/>
        public event GetAllPaperFillMarkCompletedEventHandler GetAllPaperFillMarkCompleted;
        
        /// <remarks/>
        public event GetAllPaperQuesCompletedEventHandler GetAllPaperQuesCompleted;
        
        /// <remarks/>
        public event GetAllPaperQuesMarkCompletedEventHandler GetAllPaperQuesMarkCompleted;
        
        /// <remarks/>
        public event QueryPaperCompletedEventHandler QueryPaperCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaperType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaperType(int id) {
            object[] results = this.Invoke("GetPaperType", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaperTypeAsync(int id) {
            this.GetPaperTypeAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPaperTypeAsync(int id, object userState) {
            if ((this.GetPaperTypeOperationCompleted == null)) {
                this.GetPaperTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaperTypeOperationCompleted);
            }
            this.InvokeAsync("GetPaperType", new object[] {
                        id}, this.GetPaperTypeOperationCompleted, userState);
        }
        
        private void OnGetPaperTypeOperationCompleted(object arg) {
            if ((this.GetPaperTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaperTypeCompleted(this, new GetPaperTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePaperState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePaperState(int PaperID) {
            object[] results = this.Invoke("UpdatePaperState", new object[] {
                        PaperID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePaperStateAsync(int PaperID) {
            this.UpdatePaperStateAsync(PaperID, null);
        }
        
        /// <remarks/>
        public void UpdatePaperStateAsync(int PaperID, object userState) {
            if ((this.UpdatePaperStateOperationCompleted == null)) {
                this.UpdatePaperStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePaperStateOperationCompleted);
            }
            this.InvokeAsync("UpdatePaperState", new object[] {
                        PaperID}, this.UpdatePaperStateOperationCompleted, userState);
        }
        
        private void OnUpdatePaperStateOperationCompleted(object arg) {
            if ((this.UpdatePaperStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePaperStateCompleted(this, new UpdatePaperStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePaperState1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePaperState1(int PaperID) {
            object[] results = this.Invoke("UpdatePaperState1", new object[] {
                        PaperID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePaperState1Async(int PaperID) {
            this.UpdatePaperState1Async(PaperID, null);
        }
        
        /// <remarks/>
        public void UpdatePaperState1Async(int PaperID, object userState) {
            if ((this.UpdatePaperState1OperationCompleted == null)) {
                this.UpdatePaperState1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePaperState1OperationCompleted);
            }
            this.InvokeAsync("UpdatePaperState1", new object[] {
                        PaperID}, this.UpdatePaperState1OperationCompleted, userState);
        }
        
        private void OnUpdatePaperState1OperationCompleted(object arg) {
            if ((this.UpdatePaperState1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePaperState1Completed(this, new UpdatePaperState1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePaper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePaper(int PaperID) {
            object[] results = this.Invoke("DeletePaper", new object[] {
                        PaperID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePaperAsync(int PaperID) {
            this.DeletePaperAsync(PaperID, null);
        }
        
        /// <remarks/>
        public void DeletePaperAsync(int PaperID, object userState) {
            if ((this.DeletePaperOperationCompleted == null)) {
                this.DeletePaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePaperOperationCompleted);
            }
            this.InvokeAsync("DeletePaper", new object[] {
                        PaperID}, this.DeletePaperOperationCompleted, userState);
        }
        
        private void OnDeletePaperOperationCompleted(object arg) {
            if ((this.DeletePaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePaperCompleted(this, new DeletePaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePaperDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePaperDetail(int PaperID) {
            object[] results = this.Invoke("DeletePaperDetail", new object[] {
                        PaperID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePaperDetailAsync(int PaperID) {
            this.DeletePaperDetailAsync(PaperID, null);
        }
        
        /// <remarks/>
        public void DeletePaperDetailAsync(int PaperID, object userState) {
            if ((this.DeletePaperDetailOperationCompleted == null)) {
                this.DeletePaperDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePaperDetailOperationCompleted);
            }
            this.InvokeAsync("DeletePaperDetail", new object[] {
                        PaperID}, this.DeletePaperDetailOperationCompleted, userState);
        }
        
        private void OnDeletePaperDetailOperationCompleted(object arg) {
            if ((this.DeletePaperDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePaperDetailCompleted(this, new DeletePaperDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAllPaper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAllPaper() {
            object[] results = this.Invoke("QueryAllPaper", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAllPaperAsync() {
            this.QueryAllPaperAsync(null);
        }
        
        /// <remarks/>
        public void QueryAllPaperAsync(object userState) {
            if ((this.QueryAllPaperOperationCompleted == null)) {
                this.QueryAllPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAllPaperOperationCompleted);
            }
            this.InvokeAsync("QueryAllPaper", new object[0], this.QueryAllPaperOperationCompleted, userState);
        }
        
        private void OnQueryAllPaperOperationCompleted(object arg) {
            if ((this.QueryAllPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAllPaperCompleted(this, new QueryAllPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperSing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperSing(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperSing", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperSingAsync(int PapperId, string sb) {
            this.GetAllPaperSingAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperSingAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperSingOperationCompleted == null)) {
                this.GetAllPaperSingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperSingOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperSing", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperSingOperationCompleted, userState);
        }
        
        private void OnGetAllPaperSingOperationCompleted(object arg) {
            if ((this.GetAllPaperSingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperSingCompleted(this, new GetAllPaperSingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperSingMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperSingMark(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperSingMark", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperSingMarkAsync(int PapperId, string sb) {
            this.GetAllPaperSingMarkAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperSingMarkAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperSingMarkOperationCompleted == null)) {
                this.GetAllPaperSingMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperSingMarkOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperSingMark", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperSingMarkOperationCompleted, userState);
        }
        
        private void OnGetAllPaperSingMarkOperationCompleted(object arg) {
            if ((this.GetAllPaperSingMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperSingMarkCompleted(this, new GetAllPaperSingMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperMult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperMult(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperMult", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperMultAsync(int PapperId, string sb) {
            this.GetAllPaperMultAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperMultAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperMultOperationCompleted == null)) {
                this.GetAllPaperMultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperMultOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperMult", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperMultOperationCompleted, userState);
        }
        
        private void OnGetAllPaperMultOperationCompleted(object arg) {
            if ((this.GetAllPaperMultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperMultCompleted(this, new GetAllPaperMultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperMultMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperMultMark(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperMultMark", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperMultMarkAsync(int PapperId, string sb) {
            this.GetAllPaperMultMarkAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperMultMarkAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperMultMarkOperationCompleted == null)) {
                this.GetAllPaperMultMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperMultMarkOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperMultMark", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperMultMarkOperationCompleted, userState);
        }
        
        private void OnGetAllPaperMultMarkOperationCompleted(object arg) {
            if ((this.GetAllPaperMultMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperMultMarkCompleted(this, new GetAllPaperMultMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperJudg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperJudg(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperJudg", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperJudgAsync(int PapperId, string sb) {
            this.GetAllPaperJudgAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperJudgAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperJudgOperationCompleted == null)) {
                this.GetAllPaperJudgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperJudgOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperJudg", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperJudgOperationCompleted, userState);
        }
        
        private void OnGetAllPaperJudgOperationCompleted(object arg) {
            if ((this.GetAllPaperJudgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperJudgCompleted(this, new GetAllPaperJudgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperJudgMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperJudgMark(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperJudgMark", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperJudgMarkAsync(int PapperId, string sb) {
            this.GetAllPaperJudgMarkAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperJudgMarkAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperJudgMarkOperationCompleted == null)) {
                this.GetAllPaperJudgMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperJudgMarkOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperJudgMark", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperJudgMarkOperationCompleted, userState);
        }
        
        private void OnGetAllPaperJudgMarkOperationCompleted(object arg) {
            if ((this.GetAllPaperJudgMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperJudgMarkCompleted(this, new GetAllPaperJudgMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperFill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperFill(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperFill", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperFillAsync(int PapperId, string sb) {
            this.GetAllPaperFillAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperFillAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperFillOperationCompleted == null)) {
                this.GetAllPaperFillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperFillOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperFill", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperFillOperationCompleted, userState);
        }
        
        private void OnGetAllPaperFillOperationCompleted(object arg) {
            if ((this.GetAllPaperFillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperFillCompleted(this, new GetAllPaperFillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperFillMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperFillMark(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperFillMark", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperFillMarkAsync(int PapperId, string sb) {
            this.GetAllPaperFillMarkAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperFillMarkAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperFillMarkOperationCompleted == null)) {
                this.GetAllPaperFillMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperFillMarkOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperFillMark", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperFillMarkOperationCompleted, userState);
        }
        
        private void OnGetAllPaperFillMarkOperationCompleted(object arg) {
            if ((this.GetAllPaperFillMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperFillMarkCompleted(this, new GetAllPaperFillMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperQues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperQues(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperQues", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperQuesAsync(int PapperId, string sb) {
            this.GetAllPaperQuesAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperQuesAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperQuesOperationCompleted == null)) {
                this.GetAllPaperQuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperQuesOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperQues", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperQuesOperationCompleted, userState);
        }
        
        private void OnGetAllPaperQuesOperationCompleted(object arg) {
            if ((this.GetAllPaperQuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperQuesCompleted(this, new GetAllPaperQuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPaperQuesMark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllPaperQuesMark(int PapperId, string sb) {
            object[] results = this.Invoke("GetAllPaperQuesMark", new object[] {
                        PapperId,
                        sb});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPaperQuesMarkAsync(int PapperId, string sb) {
            this.GetAllPaperQuesMarkAsync(PapperId, sb, null);
        }
        
        /// <remarks/>
        public void GetAllPaperQuesMarkAsync(int PapperId, string sb, object userState) {
            if ((this.GetAllPaperQuesMarkOperationCompleted == null)) {
                this.GetAllPaperQuesMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPaperQuesMarkOperationCompleted);
            }
            this.InvokeAsync("GetAllPaperQuesMark", new object[] {
                        PapperId,
                        sb}, this.GetAllPaperQuesMarkOperationCompleted, userState);
        }
        
        private void OnGetAllPaperQuesMarkOperationCompleted(object arg) {
            if ((this.GetAllPaperQuesMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPaperQuesMarkCompleted(this, new GetAllPaperQuesMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPaper", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryPaper() {
            object[] results = this.Invoke("QueryPaper", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPaperAsync() {
            this.QueryPaperAsync(null);
        }
        
        /// <remarks/>
        public void QueryPaperAsync(object userState) {
            if ((this.QueryPaperOperationCompleted == null)) {
                this.QueryPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPaperOperationCompleted);
            }
            this.InvokeAsync("QueryPaper", new object[0], this.QueryPaperOperationCompleted, userState);
        }
        
        private void OnQueryPaperOperationCompleted(object arg) {
            if ((this.QueryPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPaperCompleted(this, new QueryPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetPaperTypeCompletedEventHandler(object sender, GetPaperTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaperTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaperTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdatePaperStateCompletedEventHandler(object sender, UpdatePaperStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePaperStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePaperStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdatePaperState1CompletedEventHandler(object sender, UpdatePaperState1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePaperState1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePaperState1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeletePaperCompletedEventHandler(object sender, DeletePaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeletePaperDetailCompletedEventHandler(object sender, DeletePaperDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePaperDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePaperDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryAllPaperCompletedEventHandler(object sender, QueryAllPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAllPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAllPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperSingCompletedEventHandler(object sender, GetAllPaperSingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperSingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperSingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperSingMarkCompletedEventHandler(object sender, GetAllPaperSingMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperSingMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperSingMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperMultCompletedEventHandler(object sender, GetAllPaperMultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperMultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperMultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperMultMarkCompletedEventHandler(object sender, GetAllPaperMultMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperMultMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperMultMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperJudgCompletedEventHandler(object sender, GetAllPaperJudgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperJudgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperJudgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperJudgMarkCompletedEventHandler(object sender, GetAllPaperJudgMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperJudgMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperJudgMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperFillCompletedEventHandler(object sender, GetAllPaperFillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperFillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperFillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperFillMarkCompletedEventHandler(object sender, GetAllPaperFillMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperFillMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperFillMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperQuesCompletedEventHandler(object sender, GetAllPaperQuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperQuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperQuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPaperQuesMarkCompletedEventHandler(object sender, GetAllPaperQuesMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPaperQuesMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPaperQuesMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryPaperCompletedEventHandler(object sender, QueryPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591