//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3603
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3603 版自动生成。
// 
#pragma warning disable 1591

namespace OnLineExamBLLWS.DALWS_Role {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DALWS_RoleSoap", Namespace="http://tempuri.org/")]
    public partial class DALWS_Role : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleNameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DALWS_Role() {
            this.Url = global::OnLineExamBLLWS.Properties.Settings.Default.OnLineExamBLLWS_DALWS_Role_DALWS_Role;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertRoleCompletedEventHandler InsertRoleCompleted;
        
        /// <remarks/>
        public event DelectCompletedEventHandler DelectCompleted;
        
        /// <remarks/>
        public event SelectRoleCompletedEventHandler SelectRoleCompleted;
        
        /// <remarks/>
        public event GetRoleNameCompletedEventHandler GetRoleNameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertRole(Role role) {
            object[] results = this.Invoke("InsertRole", new object[] {
                        role});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRoleAsync(Role role) {
            this.InsertRoleAsync(role, null);
        }
        
        /// <remarks/>
        public void InsertRoleAsync(Role role, object userState) {
            if ((this.InsertRoleOperationCompleted == null)) {
                this.InsertRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRoleOperationCompleted);
            }
            this.InvokeAsync("InsertRole", new object[] {
                        role}, this.InsertRoleOperationCompleted, userState);
        }
        
        private void OnInsertRoleOperationCompleted(object arg) {
            if ((this.InsertRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRoleCompleted(this, new InsertRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delect(string RoleID) {
            object[] results = this.Invoke("Delect", new object[] {
                        RoleID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelectAsync(string RoleID) {
            this.DelectAsync(RoleID, null);
        }
        
        /// <remarks/>
        public void DelectAsync(string RoleID, object userState) {
            if ((this.DelectOperationCompleted == null)) {
                this.DelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelectOperationCompleted);
            }
            this.InvokeAsync("Delect", new object[] {
                        RoleID}, this.DelectOperationCompleted, userState);
        }
        
        private void OnDelectOperationCompleted(object arg) {
            if ((this.DelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelectCompleted(this, new DelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] SelectRole() {
            object[] results = this.Invoke("SelectRole", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectRoleAsync() {
            this.SelectRoleAsync(null);
        }
        
        /// <remarks/>
        public void SelectRoleAsync(object userState) {
            if ((this.SelectRoleOperationCompleted == null)) {
                this.SelectRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectRoleOperationCompleted);
            }
            this.InvokeAsync("SelectRole", new object[0], this.SelectRoleOperationCompleted, userState);
        }
        
        private void OnSelectRoleOperationCompleted(object arg) {
            if ((this.SelectRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectRoleCompleted(this, new SelectRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoleName(string UserID) {
            object[] results = this.Invoke("GetRoleName", new object[] {
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleNameAsync(string UserID) {
            this.GetRoleNameAsync(UserID, null);
        }
        
        /// <remarks/>
        public void GetRoleNameAsync(string UserID, object userState) {
            if ((this.GetRoleNameOperationCompleted == null)) {
                this.GetRoleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleNameOperationCompleted);
            }
            this.InvokeAsync("GetRoleName", new object[] {
                        UserID}, this.GetRoleNameOperationCompleted, userState);
        }
        
        private void OnGetRoleNameOperationCompleted(object arg) {
            if ((this.GetRoleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleNameCompleted(this, new GetRoleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Role {
        
        private int roleIdField;
        
        private string roleNameField;
        
        private int hasDuty_UserManageField;
        
        private int hasDuty_RoleManageField;
        
        private int hasDuty_RoleField;
        
        private int hasDuty_UserScoreField;
        
        private int hasDuty_CourseManageField;
        
        private int hasDuty_PaperSetupField;
        
        private int hasDuty_PaperListsField;
        
        private int hasDuty_UserPaperListField;
        
        private int hasDuty_SingleSelectManageField;
        
        private int hasDuty_MultiSelectManageField;
        
        private int hasDuty_FillBlankManageField;
        
        private int hasDuty_JudgeManageField;
        
        private int hasDuty_QuestionManageField;
        
        /// <remarks/>
        public int RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_UserManage {
            get {
                return this.hasDuty_UserManageField;
            }
            set {
                this.hasDuty_UserManageField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_RoleManage {
            get {
                return this.hasDuty_RoleManageField;
            }
            set {
                this.hasDuty_RoleManageField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_Role {
            get {
                return this.hasDuty_RoleField;
            }
            set {
                this.hasDuty_RoleField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_UserScore {
            get {
                return this.hasDuty_UserScoreField;
            }
            set {
                this.hasDuty_UserScoreField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_CourseManage {
            get {
                return this.hasDuty_CourseManageField;
            }
            set {
                this.hasDuty_CourseManageField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_PaperSetup {
            get {
                return this.hasDuty_PaperSetupField;
            }
            set {
                this.hasDuty_PaperSetupField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_PaperLists {
            get {
                return this.hasDuty_PaperListsField;
            }
            set {
                this.hasDuty_PaperListsField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_UserPaperList {
            get {
                return this.hasDuty_UserPaperListField;
            }
            set {
                this.hasDuty_UserPaperListField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_SingleSelectManage {
            get {
                return this.hasDuty_SingleSelectManageField;
            }
            set {
                this.hasDuty_SingleSelectManageField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_MultiSelectManage {
            get {
                return this.hasDuty_MultiSelectManageField;
            }
            set {
                this.hasDuty_MultiSelectManageField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_FillBlankManage {
            get {
                return this.hasDuty_FillBlankManageField;
            }
            set {
                this.hasDuty_FillBlankManageField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_JudgeManage {
            get {
                return this.hasDuty_JudgeManageField;
            }
            set {
                this.hasDuty_JudgeManageField = value;
            }
        }
        
        /// <remarks/>
        public int HasDuty_QuestionManage {
            get {
                return this.hasDuty_QuestionManageField;
            }
            set {
                this.hasDuty_QuestionManageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertRoleCompletedEventHandler(object sender, InsertRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DelectCompletedEventHandler(object sender, DelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SelectRoleCompletedEventHandler(object sender, SelectRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRoleNameCompletedEventHandler(object sender, GetRoleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591